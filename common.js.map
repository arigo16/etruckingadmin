{"version":3,"sources":["webpack:///./node_modules/ng2-img-max/dist/ng2-img-max.js","webpack:///./src/app/directive/numberOnly.directive.ts","webpack:///./src/app/directive/numberOnly.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AACF;AACI;AACI;AACX;AACxD,uC;;;;;;;;;;;;ACLA;AAAA;AAAA;AAAoE;AAEpE;IAUI,6BAAoB,EAAc;QAAd,OAAE,GAAF,EAAE,CAAY;QANlC,4CAA4C;QACpC,UAAK,GAAW,IAAI,MAAM,CAAC,4BAA4B,CAAC,CAAC;QACjE,gDAAgD;QAChD,4BAA4B;QACpB,gBAAW,GAAkB,CAAC,WAAW,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;IAGzE,CAAC;IAED,uCAAS,GADT,UACU,KAAoB;QAC1B,2CAA2C;QAC3C,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;YAC5C,OAAO;SACV;QACD,IAAI,OAAO,GAAW,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC;QAClD,IAAI,IAAI,GAAW,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC7C,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;YACzC,KAAK,CAAC,cAAc,EAAE,CAAC;SAC1B;IACL,CAAC;IACL,0BAAC;AAAD,CAAC;;;;;;;;;;;;;;ACvBD;AAAA;AAAA;IAAA;IAIgC,CAAC;IAAD,uBAAC;AAAD,CAAC","file":"common.js","sourcesContent":["export { Ng2ImgMaxService } from './src/ng2-img-max.service';\r\nexport { Ng2ImgMaxModule } from './src/ng2-img-max.module';\r\nexport { ImgMaxSizeService } from './src/img-max-size.service';\r\nexport { ImgMaxPXSizeService } from './src/img-maxpx-size.service';\r\nexport { ImgExifService } from './src/img-exif.service';\r\n//# sourceMappingURL=ng2-img-max.js.map","import { Directive, ElementRef, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[myNumberOnly]'\r\n})\r\nexport class NumberOnlyDirective {\r\n    // Allow decimal numbers and negative values\r\n    private regex: RegExp = new RegExp(/^-?[0-9]+(\\.[0-9]*){0,1}$/g);\r\n    // Allow key codes for special events. Reflect :\r\n    // Backspace, tab, end, home\r\n    private specialKeys: Array<string> = ['Backspace', 'Tab', 'End', 'Home'];\r\n\r\n    constructor(private el: ElementRef) {\r\n    }\r\n    @HostListener('keydown', ['$event'])\r\n    onKeyDown(event: KeyboardEvent) {\r\n        // Allow Backspace, tab, end, and home keys\r\n        if (this.specialKeys.indexOf(event.key) !== -1) {\r\n            return;\r\n        }\r\n        let current: string = this.el.nativeElement.value;\r\n        let next: string = current.concat(event.key);\r\n        if (next && !String(next).match(this.regex)) {\r\n            event.preventDefault();\r\n        }\r\n    }\r\n}","import { NgModule } from \"@angular/core\"\r\nimport { NumberOnlyDirective } from \"./numberOnly.directive\"\r\n\r\n@NgModule({\r\n    declarations: [NumberOnlyDirective],\r\n    exports: [NumberOnlyDirective]\r\n})\r\nexport class NumberOnlyModule { }"],"sourceRoot":""}